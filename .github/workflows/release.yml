name: Release
on: create

jobs:
  build:
    if: github.ref_type == 'tag'
    uses: andrewiggins/publish-gh-release-package/.github/workflows/main.yml@main

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: npm-package
      - run: ls -al
      - name: Create draft release
        uses: actions/github-script@v5
        with:
          script: |
            const tag = process.env.GITHUB_REF_NAME;
            console.log('tag:', tag);

            // Get a release by tag name
            // https://docs.github.com/en/rest/reference/repos#get-a-release-by-tag-name
            const getRes = await github.rest.repos.getReleaseByTag({
              ...context.repo,
              tag: 
            })

            console.log(getRes);

            // // Create a release
            // // API Documentation: https://docs.github.com/en/rest/reference/repos#create-a-release
            // // Octokit Documentation: https://octokit.github.io/rest.js/v18#repos-create-release
            // const createReleaseResponse = await github.rest.repos.createRelease({
            //   ...context.repo,
            //   tag_name: tag,
            //   name: releaseName,
            //   body: bodyFileContent || body,
            //   draft,
            //   prerelease,
            //   target_commitish: commitish
            // });
            //
            // // Get the ID, html_url, and upload URL for the created Release from the response
            // const {
            //   data: { id: releaseId, html_url: htmlUrl, upload_url: uploadUrl }
            // } = createReleaseResponse;
            //
            // // Setup headers for API call, see Octokit Documentation: https://octokit.github.io/rest.js/v18#repos-upload-release-asset for more information
            // const headers = { 'content-type': assetContentType, 'content-length': contentLength(assetPath) };

      - name: Upload release artifact
        uses: actions/github-script@v5
        with:
          script: |
            // // Upload a release asset
            // // API Documentation: https://docs.github.com/en/rest/reference/repos#upload-a-release-asset
            // // Octokit Documentation: https://octokit.github.io/rest.js/v18#repos-upload-release-asset
            // const uploadAssetResponse = await github.repos.uploadReleaseAsset({
            //   url: uploadUrl,
            //   headers,
            //   name: assetName,
            //   file: fs.readFileSync(assetPath)
            // });
            //
            // // Get the browser_download_url for the uploaded release asset from the response
            // const {
            //   data: { browser_download_url: browserDownloadUrl }
            // } = uploadAssetResponse;
